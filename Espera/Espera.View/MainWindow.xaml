<Controls:MetroWindow x:Class="Espera.View.MainWindow"
                      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                      xmlns:Controls="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
                      xmlns:ViewModels="clr-namespace:Espera.View.ViewModels"
                      xmlns:WPF="clr-namespace:Rareform.WPF;assembly=Rareform"
                      Title="Espera"
                      Height="768"
                      Width="1024"
                      WindowState="Normal"
                      Icon="/Espera.View;component/Images/appbar.music.png"
                      Closing="MetroWindowClosing"
                      KeyUp="MetroWindow_KeyUp" 
                      WindowStartupLocation="CenterScreen" 
                      ResizeMode="CanMinimize">
    <Window.DataContext>
        <ViewModels:MainViewModel x:Name="mainViewModel" />
    </Window.DataContext>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Colours.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Fonts.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Controls.AnimatedSingleRowTabControl.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Icons/MergedResources.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/Blue.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MahApps.Metro;component/Styles/Accents/BaseLight.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
            <Style x:Key="VolumeButtonStyle" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="Button">
                            <Border Background="Transparent" Height="25" Width="25" >
                                <ContentPresenter  />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            
        </ResourceDictionary>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0"
              Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0"
                        Orientation="Horizontal">
                <Button Padding="0"
                        ToolTip="Add music"
                        Click="AddSongsButtonClick">
                    <Image Source="/Espera.View;component/Images/appbar.add.png" />
                </Button>
                <Button Padding="0"
                        Margin="15, 0, 0, 0"
                        Width="30">
                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="{x:Type Button}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                    <Setter Property="Command" Value="{Binding Path=PauseCommand}" />
                                    <Setter Property="ToolTip" Value="Pause" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                    <Setter Property="Command" Value="{Binding Path=PlayCommand}" />
                                    <Setter Property="ToolTip" Value="Play" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                    <Image>
                        <Image.Style>
                            <Style TargetType="{x:Type Image}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                        <Setter Property="Source" Value="/Espera.View;component/Images/appbar.pause.png" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                        <Setter Property="Source" Value="/Espera.View;component/Images/appbar.play.png" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </Button>
                <Button Padding="0"
                        Margin="5, 0, 0, 0"
                        ToolTip="Previous song"
                        Command="{Binding Path=PreviousSongCommand}">
                    <Image Source="/Espera.View;component/Images/appbar.navigate.previous.png" />
                </Button>
                <Button Padding="0"
                        Margin="5, 0, 0, 0"
                        ToolTip="Next song"
                        Command="{Binding Path=NextSongCommand}">
                    <Image Source="/Espera.View;component/Images/appbar.navigate.next.png" />
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1"
                        Margin="10, 0, 0, 0"
                        Orientation="Horizontal">
                <Button Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Mute"
                        Command="{Binding Path=MuteCommand}"
                        VerticalAlignment="Center">
                    <Image Source="/Espera.View;component/Images/appbar.sound.1.png" />
                </Button>
                <Slider Width="200"
                        IsMoveToPointEnabled="True"
                        Maximum="1"
                        Value="{Binding Path=Volume}" />
                <Button Style="{StaticResource VolumeButtonStyle}"
                        ToolTip="Unmute"
                        Command="{Binding Path=UnMuteCommand}"
                        VerticalAlignment="Center">
                    <Image Source="/Espera.View;component/Images/appbar.sound.3.png" />
                </Button>
            </StackPanel>
            <Slider Grid.Column="2"
                    Margin="5, 0, 0, 0"
                    IsMoveToPointEnabled="True"
                    Value="{Binding Path=CurrentSeconds}"
                    Maximum="{Binding Path=TotalSeconds}" />
            <StackPanel Grid.Column="3"
                        Orientation="Horizontal"
                        Margin="5, 0, 0, 0">
                <TextBlock VerticalAlignment="Center"
                           Text="{Binding Path=CurrentTime, StringFormat=mm\\:ss}" />
                <TextBlock VerticalAlignment="Center"
                           Text="/" />
                <TextBlock VerticalAlignment="Center"
                           Text="{Binding Path=TotalTime, StringFormat=mm\\:ss}" />
            </StackPanel>
            <TextBox Grid.Column="4"
                     Margin="10, 0, 0, 0"
                     VerticalAlignment="Center"
                     VerticalContentAlignment="Center"
                     Width="150"
                     Text="{Binding Path=SearchText, UpdateSourceTrigger=PropertyChanged}"
                     KeyUp="SearchTextBox_KeyUp" />
        </Grid>
        <Grid Grid.Row="1"
              Margin="0, 10, 0, 0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Visibility="{Binding Path=IsLocal, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ListBox ItemsSource="{Binding Path=Artists}"
                         SelectedItem="{Binding Path=SelectedArtist}">
                    <ListBox.ItemContainerStyle>
                        <Style TargetType="{x:Type ListBoxItem}">
                            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                            <Setter Property="VerticalContentAlignment" Value="Center" />
                            <Setter Property="MinHeight" Value="25" />
                            <Setter Property="Margin" Value="0" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                        <Border x:Name="Border"
                                                Background="{TemplateBinding Background}"
                                                SnapsToDevicePixels="true">
                                            <ContentPresenter Margin="5, 0, 0, 0"
                                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                        </Border>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="IsSelected" Value="True">
                                                <Setter TargetName="Border" Property="BorderBrush" Value="#FF143c65" />
                                                <Setter Property="Background" TargetName="Border" Value="{DynamicResource AccentColorBrush}" />
                                            </Trigger>
                                            <Trigger Property="IsMouseOver" Value="True">
                                                <Setter TargetName="Border" Property="Background">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource AccentColor3}" />
                                                    </Setter.Value>
                                                </Setter>
                                            </Trigger>
                                            <MultiTrigger>
                                                <MultiTrigger.Conditions>
                                                    <Condition Property="IsSelected" Value="True" />
                                                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                                                </MultiTrigger.Conditions>
                                                <Setter Property="Background" TargetName="Border">
                                                    <Setter.Value>
                                                        <SolidColorBrush Color="{DynamicResource AccentColor2}" />
                                                    </Setter.Value>
                                                </Setter>
                                                <Setter Property="BorderBrush" TargetName="Border" Value="#FF143c65" />
                                            </MultiTrigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </ListBox.ItemContainerStyle>
                </ListBox>
            </Grid>
            <Border Grid.Column="0"
                    BorderBrush="{DynamicResource TextBoxBorderBrush}"
                    BorderThickness="0.5"
                    Visibility="{Binding Path=IsYoutube, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Grid DataContext="{Binding Path=SelectedSongs/}"
                            Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Image Grid.Row="0"
                           Source="{Binding Path=Thumbnail}" />
                    <ScrollViewer Grid.Row="1"
                                  Margin="0, 10, 0, 0 "
                                  VerticalScrollBarVisibility="Auto">
                        <TextBlock Text="{Binding Path=Description}"
                                   TextWrapping="Wrap" />
                    </ScrollViewer>
                </Grid>
            </Border>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.4*" />
                    <RowDefinition Height="0.6*" />
                </Grid.RowDefinitions>
                <TabControl>
                    <TabItem Header="Local"
                             IsSelected="{Binding Path=IsLocal}">
                        <ListView ItemsSource="{Binding Path=SelectableLocalSongs}"
                                  SelectionChanged="SongList_SelectionChanged"
                                  KeyUp="SongListKeyUp"
                                  ScrollViewer.CanContentScroll="True"
                                  ContextMenuOpening="SongList_ContextMenuOpening">
                            <ListView.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Add to playlist" Command="{Binding Path=AddSelectedSongsToPlaylistCommand}" />
                                    <MenuItem Header="Remove from library" Command="{Binding Path=RemoveSelectedSongsFromLibraryCommand}" />
                                    <MenuItem Header="Remove from library and playlist" Command="{Binding Path=RemoveSelectedSongsFromLibraryAndPlaylistCommand}" />
                                </ContextMenu>
                            </ListView.ContextMenu>
                            <ListView.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                    <EventSetter Event="MouseDoubleClick" Handler="SongDoubleClick"/>
                                </Style>
                            </ListView.ItemContainerStyle>
                            <ListView.View>
                                <GridView>
                                    <GridViewColumn Header="Title">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Title}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Duration">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Artist">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Artist}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Album">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Album}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                    <GridViewColumn Header="Genre">
                                        <GridViewColumn.CellTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Path=Genre}"
                                                           TextTrimming="CharacterEllipsis" />
                                            </DataTemplate>
                                        </GridViewColumn.CellTemplate>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>
                    </TabItem>
                </TabControl>
                <Grid Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <ListView Grid.Row="0"
                              ItemsSource="{Binding Path=Playlist}"
                              SelectionChanged="Playlist_SelectionChanged"
                              KeyUp="PlaylistKeyUp"
                              ScrollViewer.CanContentScroll="True"
                              ContextMenuOpening="Playlist_ContextMenuOpening">
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Play" Command="{Binding Path=PlayCommand}" />
                                <MenuItem Header="Remove" Command="{Binding Path=RemoveSelectedPlaylistEntriesCommand}" />
                            </ContextMenu>
                        </ListView.ContextMenu>
                        <ListView.ItemContainerStyle>
                            <Style BasedOn="{StaticResource {x:Type ListViewItem}}" TargetType="{x:Type ListViewItem}">
                                <EventSetter Event="MouseDoubleClick" Handler="PlaylistDoubleClick"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsInactive}" Value="True">
                                        <Setter Property="Foreground" Value="Gray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Width="35">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Source="/Espera.View;component/Images/appbar.sound.3.png"
                                                   Visibility="{Binding Path=IsPlaying, Converter={StaticResource BooleanToVisibilityConverter}}"
                                                   Width="25"
                                                   Height="25" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Title">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Title}" TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Duration">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Duration, StringFormat=mm\\:ss}"
                                                   TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Artist">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Artist}"
                                                   TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Album">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Album}"
                                                   TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Genre">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Genre}"
                                                   TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Source">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Path=Source}"
                                                   TextTrimming="CharacterEllipsis" />
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn>
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.Style>
                                                    <Style TargetType="{x:Type Grid}">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding Path=CacheProgress}" Value="100">
                                                                <Setter Property="Visibility" Value="Hidden" />
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Grid.Style>
                                                <TextBlock VerticalAlignment="Center">
                                                    <TextBlock.Style>
                                                        <Style TargetType="{x:Type TextBlock}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="True">
                                                                    <Setter Property="Text" Value="Caching failed!" />
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding Path=HasCachingFailed}" Value="False">
                                                                    <Setter Property="Text" Value="{Binding Path=CacheProgress, StringFormat=Caching... \{0\}%}" />
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </TextBlock.Style>
                                                </TextBlock>
                                            </Grid>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                    <StackPanel Grid.Row="1"
                                Orientation="Horizontal"
                                HorizontalAlignment="Center">
                        <TextBlock Text="{Binding Path=SongsRemaining}" />
                        <TextBlock Text=" song" />
                        <TextBlock Text="s">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=SongsRemaining}" Value="1">
                                            <Setter Property="Visibility" Value="Collapsed" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock Text=" remaining, with " />
                        <TextBlock Text="{Binding Path=TimeRemaining.TotalMinutes, FallbackValue=0, StringFormat=\{0:0.0\}}" />
                        <TextBlock Text=" minutes play time" />
                    </StackPanel>
                </Grid>
            </Grid>   
        </Grid>
        <StatusBar Grid.Row="2"
                   Margin="0, 5, 0, 0"
                   Height="25"
                   Visibility="{Binding Path=IsUpdating, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Background="#FF454545"
                   DataContext="{Binding Path=StatusViewModel}">
            <StatusBarItem Content="Updating library..." />
        </StatusBar>
        <StatusBar Grid.Row="2"
                   Margin="0, 5, 0, 0"
                   Height="25"
                   Visibility="{Binding Path=IsAdding, Converter={StaticResource BooleanToVisibilityConverter}}"
                   Background="#FF454545"
                   DataContext="{Binding Path=StatusViewModel}">
            <StatusBarItem>
                <ProgressBar Width="200"
                             Value="{Binding Path=ProcessedTags, Mode=OneWay}"
                             Maximum="{Binding Path=TotalTags}"
                             IsIndeterminate="{Binding Path=IsProgressUnkown}"/>
            </StatusBarItem>
            <StatusBarItem Foreground="White">
                <Grid>
                    <StackPanel Orientation="Horizontal">
                        <StackPanel.Style>
                            <Style TargetType="{x:Type StackPanel}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=IsProgressUnkown}" Value="True">
                                        <Setter Property="Visibility" Value="Hidden" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </StackPanel.Style>
                        <TextBlock Text="Added " />
                        <TextBlock Text="{Binding Path=ProcessedTags}" />
                        <TextBlock Text=" of " />
                        <TextBlock Text="{Binding Path=TotalTags}" />
                        <TextBlock Text=" found Songs: " />
                        <TextBlock Text="{Binding Path=Path}" />
                    </StackPanel>
                    <TextBlock Text="Searching..." Visibility="{Binding Path=IsProgressUnkown, Converter={StaticResource BooleanToVisibilityConverter}}" />
                </Grid>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</Controls:MetroWindow>